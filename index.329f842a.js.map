{"mappings":"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","sources":["node_modules/preact/src/constants.js","node_modules/preact/src/util.js","node_modules/preact/src/options.js","node_modules/preact/src/create-element.js","node_modules/preact/src/component.js","node_modules/preact/src/diff/children.js","node_modules/preact/src/diff/props.js","node_modules/preact/src/diff/index.js","node_modules/preact/src/render.js","node_modules/preact/src/diff/catch-error.js","node_modules/preact/jsx-runtime/src/index.js","node_modules/preact/devtools/src/devtools.js","node_modules/preact/hooks/src/index.js","src/Chars.tsx","src/App.tsx","src/index.tsx"],"sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\nlet vnodeId = 0;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {string} [__self]\n * @param {string} [__source]\n */\nfunction createVNode(type, props, key, __self, __source) {\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = {},\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'ref') {\n\t\t\tref = props[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment\n};\n","import { options, Fragment, Component } from 'preact';\n\nexport function initDevTools() {\n\tif (typeof window != 'undefined' && window.__PREACT_DEVTOOLS__) {\n\t\twindow.__PREACT_DEVTOOLS__.attachPreact('10.8.2', options, {\n\t\t\tFragment,\n\t\t\tComponent\n\t\t});\n\t}\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import type { JSX } from \"preact/jsx-runtime\"\n\nexport const mkVowelSvgData = () => [\n    {\n        id: 1,\n        d: \"m 6.8791668,1.322917 5.2916712,3.96875\",\n        selected: false\n    },\n    {\n        id: 2,\n        d: \"M 1.5874999,5.291667 6.8791668,1.322917\",\n        selected: false\n    },\n    {\n        id: 3,\n        d: \"M 1.5874999,5.291667 V 15.874998\",\n        selected: false\n    },\n    {\n        id: 4,\n        d: \"m 1.5874999,15.874998 5.2916669,3.96875\",\n        selected: false\n    },\n    {\n        id: 5,\n        d: \"m 6.8791668,19.843748 5.2916712,-3.96875\",\n        selected: false\n    }\n]\n\nexport const mkConsonantSvgData = () => [\n    {\n        id: 1,\n        d: \"M 2.9104168,5.291667 6.8791668,7.9375\",\n        selected: false\n    },\n    {\n        id: 2,\n        d: \"M 6.8791668,2.645834 V 7.9375\",\n        selected: false\n    },\n    {\n        id: 3,\n        d: \"M 10.847918,5.291667 6.8791668,7.9375\",\n        selected: false\n    },\n    {\n        id: 4,\n        d: \"m 6.8791668,11.90625 -3.96875,2.645838\",\n        selected: false\n    },\n    {\n        id: 5,\n        d: \"m 6.8791668,11.90625 v 5.291668\",\n        selected: false\n    },\n    {\n        id: 6,\n        d: \"m 6.8791668,11.90625 3.9687512,2.645838\",\n        selected: false\n    },\n    {\n        id: 0,\n        d: \"\",\n        selected: false\n    },\n]\n\n\n\nexport const vowels: Record<string, JSX.Element> = {\n    \"1\": <abbr title='\"y\" in \"by\"'>ī</abbr>,\n    \"2\": <abbr title='\"a\" in \"fable\"'>ā</abbr>,\n    \"4\": <abbr title='\"oy\" in \"toy\"'>ȯi</abbr>,\n    \"5\": <abbr title='\"ou\" in \"found\"'>au</abbr>,\n    \"12\": <abbr title='\"u\" in \"run\"'>ə</abbr>,\n    \"23\": <abbr title='\"o\" in \"frog\"'>ä</abbr>,\n    \"34\": <abbr title='\"oo\" in \"book\"'>u</abbr>,\n    \"45\": <abbr title='\"i\" in \"forbidden\"'>i</abbr>,\n    \"35\": <abbr title='\"are\" in \"share\"'>er</abbr>,\n    \"123\": <abbr title='\"a\" in \"magic\"'>a</abbr>,\n    \"345\": <abbr title='\"e\" in \"bell\"'>e</abbr>,\n    \"235\": <abbr title='\"ear\" in \"nearby\"'>ir</abbr>,\n    \"1345\": <abbr title='\"er\" in \"understood\"'>ər</abbr>,\n    \"1245\": <abbr title='\"ar\" in \"dark\"'>är</abbr>,\n    \"1234\": <abbr title='\"ea\" in \"mean\"'>ē</abbr>,\n    \"12345\": <abbr title='\"o\" in \"no\"'>ō</abbr>,\n}\n\nexport const consonants: Record<string, JSX.Element> = {\n    \"13\": <abbr title='\"w\" in \"wind'>w</abbr>,\n    \"26\": <abbr title='\"b\" in \"beach\"'>b</abbr>,\n    \"46\": <abbr title='\"m\" in \"mantle\"'>m</abbr>,\n    \"24\": <abbr title='\"j\" in \"just'>j</abbr>,\n    \"25\": <abbr title='\"l\" in \"look\"'>l</abbr>,\n    \"35\": <abbr title='\"p\" in \"prize\"'>p</abbr>,\n    \"15\": <abbr title='\"ch\" in \"chive'>ch</abbr>,\n    \"135\": <abbr title='\"t\" in \"table\"'>t</abbr>,\n    \"126\": <abbr title='\"v\" in \"viscous\"'>v</abbr>,\n    \"246\": <abbr title='\"d\" in \"drive\"'>d</abbr>,\n    \"236\": <abbr title='\"k\" in \"kale\"'>k</abbr>,\n    \"235\": <abbr title='\"r\" in \"rabbit\"'>r</abbr>,\n    \"256\": <abbr title='\"h\" in \"house\"'>h</abbr>,\n    \"125\": <abbr title='\"y\" in \"you\"'>y</abbr>,\n    \"356\": <abbr title='\"g\" in \"grave\"'>g</abbr>,\n    \"146\": <abbr title='\"n\" in \"found\"'>n</abbr>,\n    \"345\": <abbr title='\"f\" in \"face\"'>f</abbr>,\n    \"1245\": <abbr title='\"s\" in \"controls\"'>z</abbr>,\n    \"2345\": <abbr title='\"ss\" in \"press\"'>s</abbr>,\n    \"1345\": <abbr title='\"th\" in \"death\"'>th</abbr>,\n    \"2456\": <abbr title='\"th\" in \"there\"'>t͟h</abbr>,\n    \"12346\": <abbr title='\"s\" in \"visions\"'>zh</abbr>,\n    \"12456\": <abbr title='\"sh\" in \"wish\"'>sh</abbr>,\n    \"123456\": <abbr title='\"ng\" in \"strength\"'>ng</abbr>,\n}\n","// import * as Styles from './styles.css';\nimport type { JSX } from \"preact/jsx-runtime\"\nimport { useReducer, useState } from 'preact/hooks';\nimport { consonants, vowels, mkConsonantSvgData, mkVowelSvgData } from './Chars';\n\nconst scale = 20\nconst strokeWidth = 1\n\nconst colours = {\n  selected: \"#FFFFFF\",\n  unselected: \"#333333\"\n}\n\nconst getStyle = (selected: boolean) => ({\n  strokeWidth,\n  fill: \"none\",\n  stroke: selected ? colours.selected : colours.unselected,\n  strokeLinecap: \"round\",\n  position: \"fixed\",\n  zIndex: 100\n})\n\ninterface Line {\n  id: number,\n  d: string,\n  selected: boolean\n}\n\nconst unknown = <span></span>\n\nconst getSelectedVowel = (ids: Array<Line>) => {\n  const charId = ids.filter(({ selected }) => selected).map(({ id }) => id).join(\"\");\n  return vowels[charId] ?? unknown;\n}\nconst getSelectedConsonant = (ids: Array<Line>) => {\n  const charId = ids.filter(({ selected }) => selected).map(({ id }) => id).join(\"\");\n  return consonants[charId] ?? unknown;\n}\n\ntype WordReducerAction = { key: \"add\", value: JSX.Element } | { key: \"deleteLast\" } | { key: \"clear\" }\n\ntype LineReducerAction = { key: \"toggle\", value: number } | { key: \"unselectAll\" }\n\nconst toggle = (state: Array<Line>, action: LineReducerAction) => {\n  console.log({ action });\n\n  switch (action.key) {\n    case \"toggle\": {\n      const newState = [...state];\n      if (newState[action.value] !== undefined) {\n        newState[action.value].selected = !state[action.value].selected\n      }\n      return newState\n    }\n    case \"unselectAll\": {\n      return state.map((x) => ({ ...x, selected: false }));\n    }\n    default: {\n      throw new Error(\"invalid action\")\n    }\n  }\n}\n\nexport const App = () => {\n  const [selectedVowel, setSelectedVowel] = useState<JSX.Element>(() => unknown);\n  const [vowelLines, dispatchVowelLines] = useReducer<Array<Line>, LineReducerAction>(toggle, mkVowelSvgData())\n\n  const [selectedConsonant, setSelectedConsonant] = useState<JSX.Element>(() => unknown);\n  const [consonantLines, dispatchConsonantLines] = useReducer<Array<Line>, LineReducerAction>(toggle, mkConsonantSvgData());\n\n  const [switchChars, setSwitchChars] = useState<boolean>(() => false);\n\n  const [word, dispatchWord] = useReducer<Array<JSX.Element>, WordReducerAction>((state, action) => {\n    switch (action.key) {\n      case \"add\": {\n        return state.concat(action.value)\n      }\n      case \"deleteLast\": {\n        return state.slice(0, -1)\n      }\n      case \"clear\": {\n        return [];\n      }\n      default: {\n        throw new Error(\"invalid action\")\n      }\n    }\n  }, []);\n\n  const clearInput = () => {\n    dispatchConsonantLines({ key: \"unselectAll\" });\n    dispatchVowelLines({ key: \"unselectAll\" });\n    setSelectedConsonant(unknown);\n    setSelectedVowel(unknown);\n  }\n\n  const handleConsonantClick = (index: number) => {\n    dispatchConsonantLines({ key: \"toggle\", value: index })\n    setSelectedConsonant(getSelectedConsonant(consonantLines))\n  }\n\n  const handleVowelClick = (index: number) => {\n    dispatchVowelLines({ key: \"toggle\", value: index })\n    setSelectedVowel(getSelectedVowel(vowelLines))\n  }\n\n  const handleAddChar = () => {\n    dispatchWord({ key: \"add\", value: conjoinedChar });\n    clearInput()\n  }\n\n  const handleDeleteLastChar = () => {\n    dispatchWord({ key: \"deleteLast\" });\n  }\n\n  const handleClearChars = () => {\n    dispatchWord({ key: \"clear\" });\n    clearInput()\n  }\n\n  const shouldShowStem = () => consonantLines.some((x) => x.id <= 3 && x.selected);\n\n  const conjoinedChar = switchChars ? <>\n    {selectedVowel}\n    {selectedConsonant}\n  </> : <>\n    {selectedConsonant}\n    {selectedVowel}\n  </>\n\n  return <main>\n    <svg width={14 * scale} height={23 * scale}>\n      <g transform={`scale(${scale})`}>\n        <g id=\"vowel\">\n          {\n            vowelLines.map((line, index) => <path\n              z={line.selected ? 0 : 10}\n              onClick={() => handleVowelClick( index)}\n              key={line.id}\n              style={getStyle(line.selected)}\n              d={line.d}\n              id={`vowel${line.id}`} />)\n          }\n        </g>\n        <g id=\"consonant\">\n          <path id=\"stem\" style={getStyle(shouldShowStem())} d=\"M 6.8791668,10.583333 V 7.9375\" />\n          {\n            consonantLines.map((line, index) => <path\n              onClick={() => handleConsonantClick(index)}\n              key={line.id}\n              style={getStyle(line.selected)}\n              d={line.d}\n              id={`consonant${line.id}`} />)\n          }\n        </g>\n        <g id=\"center\">\n          <path\n            style={getStyle(true)}\n            d=\"M 1.5874999,10.583333 H 12.170838\"\n            id=\"center1\" />\n        </g>\n        <g>\n          <path\n            z={switchChars ? 0 : 10}\n            style={getStyle(switchChars)}\n            onClick={() => setSwitchChars(!switchChars)}\n            d=\"m 6.8791666,20.108333 c -0.2078033,0 -0.4143269,0.08555 -0.561266,0.232484 -0.1469391,0.146939 -0.232484,0.353463 -0.232484,0.561266 0,0.207803 0.085545,0.414327 0.232484,0.561266 0.1469391,0.146939 0.3534627,0.232484 0.561266,0.232484 0.2078033,0 0.4143269,-0.08554 0.561266,-0.232484 0.1469391,-0.146939 0.232484,-0.353463 0.232484,-0.561266 0,-0.207803 -0.085545,-0.414327 -0.232484,-0.561266 -0.1469391,-0.146939 -0.3534627,-0.232484 -0.561266,-0.232484 z\"\n            id=\"switchChars\" />\n        </g>\n      </g>\n    </svg>\n    <p style=\"font-size: 2em; text-align: center; min-height: 2em\">\n      <span style=\"color: grey\">{word}</span>\n      {conjoinedChar}\n    </p>\n    <div style=\"display: flex\">\n      <button style=\"flex: 1\" onClick={() => handleAddChar()}>+</button>\n      <button style=\"flex: 1\" onClick={() => handleDeleteLastChar()}>-</button>\n      <button style=\"flex: 1\" onClick={() => handleClearChars()}>🗑️</button>\n    </div>\n  </main>\n}\n","import { h, render } from 'preact';\nimport 'preact/devtools';\nimport { App } from './App';\nimport './index.css';\n\nconst root = document.getElementById('root')\n\nif (root) {\n  render(<App />, root);\n}\n"],"names":["slice","options","vnodeId","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","i","removeNode","node","parentNode","removeChild","createVNode","type","key","ref","original","vnode","__","__b","__e","__d","undefined","__h","constructor","Fragment","children","Component","context","getDomSibling","childIndex","indexOf","sibling","length","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","unmount","applyRef","tmp","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","style","value","setProperty","test","dom","name","oldValue","useCapture","o","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","renderHook","count","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","createElement","is","data","call","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","diffElementNodes","diffed","root","cb","current","parentVNode","skipRemove","r","componentWillUnmount","this","replaceNode","normalizedProps","arguments","defaultProps","firstChild","error","errorInfo","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve","setTimeout","__self","__source","window","__PREACT_DEVTOOLS__","attachPreact","currentIndex","currentComponent","previousComponent","prevRaf","currentHook","afterPaintEffects","EMPTY","oldBeforeDiff","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","getHookState","index","hooks","__V","useState","initialState","useReducer","invokeOrReturn","reducer","init","hookState","_reducer","action","nextValue","flushAfterPaintEffects","shift","invokeCleanup","invokeEffect","hookItem","_pendingArgs","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","filter","hasErrored","hook","comp","cleanup","arg","f","$4c0415bb2a31e119$export$4c528660c2190061","$7cf5de2d778dc547$export$34b9dba7ce09269b","title","$4c0415bb2a31e119$export$320df612df0ad104","$cd93687958c8007e$var$colours","$cd93687958c8007e$var$getStyle","selected","fill","stroke","strokeLinecap","position","zIndex","$cd93687958c8007e$var$unknown","$cd93687958c8007e$var$toggle","console","log","newState","map","x","Error","$70fc9a727fa662ae$var$root","getElementById","$13c40c34b78c8ee2$export$b3890eb0ae9dca99","selectedVowel","setSelectedVowel","$204a33a7557cbbd0$export$60241385465d0a34","vowelLines","dispatchVowelLines","$204a33a7557cbbd0$export$13e3392192263954","id","d","selectedConsonant","setSelectedConsonant","consonantLines","dispatchConsonantLines","switchChars","setSwitchChars","word","dispatchWord","concat","clearInput","handleConsonantClick","ids","charId","join","$cd93687958c8007e$var$getSelectedConsonant","handleVowelClick","$cd93687958c8007e$var$getSelectedVowel","conjoinedChar","$13c40c34b78c8ee2$export$ffb0004e005737fa","width","height","transform","line","z","onClick"],"version":3,"file":"index.329f842a.js.map"}